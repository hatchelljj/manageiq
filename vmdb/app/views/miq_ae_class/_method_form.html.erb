<% if @sb[:active_tab] == "methods" %>
  <% url = url_for(:action => 'form_method_field_changed',
                   :id     => "#{@ae_method.id || "new"}")
  %>
    <p class="lead">Main Info</p>
    <table class="table table-striped">
        <tr>
          <td >
            <%= Dictionary::gettext('fqname', 
                                    :type     => :column,
                                    :notfound => :titleize)
            %>
          </td>
          <td >
            <%= h(@sb[:namespace_path]) %>
          </td>
        </tr>
        <tr>
          <td >Name</td>
          <td >
            <%= text_field_tag("#{prefix}method_name",
                                @edit[:new][:name],
                                :maxlength         => MAX_NAME_LEN,
                                "data-miq_observe" => {:interval => '.5', 
                                                       :url      => url}.to_json)
            %>
          </td>
            <%#= javascript_tag("$j('#method_name').focus()") %>
        </tr>
        <tr>
          <td >Display Name</td>
          <td >
            <%= text_field_tag("#{prefix}method_display_name",
                                @edit[:new][:display_name],
                                :maxlength         => MAX_NAME_LEN,
                                "data-miq_observe" => {:interval => '.5',
                                                       :url      => url}.to_json)
            %>
          </td>
        </tr>
        <tr>
          <td >Location</td>
          <td >
            <%= select_tag("#{prefix}method_location",
                           options_for_select(@edit[:new][:available_locations].sort, 
                           @edit[:new][:location]),
                           "data-miq_observe" => {:url => url}.to_json)
            %>
          </td>
        </tr>
        <% if @ae_method.created_on %>
          <tr>
            <td >Created On</td>
            <td >
              <%= h(format_timezone(@ae_method.created_on,Time.zone,"gtl")) %>
            </td>
          </tr>
        <% end %>
        </table> 
        <hr>
        <p class="lead">Data</p>
        <%= render :partial => "method_data",
                   :locals  => {:field_name => "#{prefix}method"}
        %>
        <hr>
    <p class="lead">Input Parameters</p>
    <table class="table table-striped" style="margin:0">
      <% if @sb[:squash_state] %>
        <% title = "Show Input Parameters" %>
        <% display = "display:none" %>
      <% else %>
        <% title = "Hide Input Parameters" %>
        <% display = "" %>
      <% end %>
      <thead>
        <tr>
          <th>
            <%= link_to(image_tag("/images/toolbars/squashed-#{@sb[:squash_state]}.png",
                                  :id    => "exp_collapse_img",
                                  :style => "z-index:50", 
                                  :alt   => title, 
                                  :title=>title),
                        {:action => 'expand_toggle',
                         :id     => "exp_collapse"},
                        :remote  => true)
            %>
          </th>
        </tr>
      </thead>
    </table>

    <div id="inputs_div" style="<%=display%>">
      <table class="table table-striped">
        <thead>
          <tr>
            <th ></th>
            <th>Name</th>
            <th>Default Value</th>
            <th>Data Type</th>
          </tr>
        </thead>
        <tbody>
          <% @edit[:new][:fields].each_with_index do |flds,i| %>
            <% unless @edit[:fields_to_delete].include?(flds["id"]) %>
              <tr>
                <td>
                <%= link_to "Remove",
                            {:action => "field_method_delete",
                             :id     => flds["id"].to_i,
                             :arr_id => i},
			    :class=>"btn btn-default",
                            "data-miq_sparkle_on"  => true,
                            "data-miq_sparkle_off" => true,
                            :remote                => true,
                            :confirm               => 'Are you sure you want to delete input field from method?',
                            :title                 => "Click to delete this input field from method")
                %>
              </td>
                <td>
                  <%= text_field_tag("#{prefix}fields_name_#{i}",
                                        flds["name"],
                                        :maxlength         => 50,
                                        "data-miq_observe" => {:interval => '.5',
                                                               :url      => url}.to_json)
                  %>
                </td>
                <td>
                  <%  str_txt = flds["datatype"] == "password" ? "display:none" : "" %>
                  <%  str_pwd = flds["datatype"] == "password" ? "" : "display:none" %>
                  <%= text_field_tag("#{prefix}fields_value_#{i}",
                                     flds["default_value"],
                                     :style             => str_txt,
                                     "data-miq_observe" => {:interval => '.5',
                                                            :url      => url}.to_json)
                  %>
                  <%= password_field_tag("#{prefix}fields_password_value_#{i}",
                                        flds["default_value"],
                                        :style             => str_pwd,
                                        "data-miq_observe" => {:interval => '.5',
                                                               :url      => url}.to_json)
                  %>
                </td>
                <td>
                  <%= select_tag("#{prefix}fields_datatype_#{i}",
                                 options_for_select(@edit[:new][:available_datatypes],
                                 flds["datatype"]),
                                 "data-miq_observe" => {:url => url}.to_json)
                  %>
              </td>
              </tr>
            <% end %>
          <% end	%>
          <% if !params[:add] && params[:add] != "new" && (session[:field_data].blank? || session[:field_data].empty?)  %>
            <tr onclick="<%= remote_function(:url=>{:action=>'field_method_select', :add=>'new', :item=>"field"}) %>" title="Click to add a new parameter">
              <td><%= image_tag("/images/icons/16/equal-green.png") %></td>
              <td><%= h("<New Parameter>") %></td>
              <td>&nbsp;</td>
              <td>&nbsp;</td>
              </tr>
          <% else %>
            <tr>
              <td>
                  <%= link_to "Add",
                                       {:action => "field_method_accept",
                                        :button =>"accept"},
				       :class=>"btn btn-default",
                                       "data-miq_sparkle_on"  => true,
                                       "data-miq_sparkle_off" => true,
                                       :remote                => true,
                                       :title                 => "Add this entry")
                  %>
              </td>
              <td>
                <%= text_field_tag("#{prefix}field_name",
                                   session[:field_data][:name],
                                   "data-miq_observe" => {:interval => '.5',
                                                          :url      => url}.to_json)
                %>
              </td>
              <td>
                <%  str_txt = session[:field_data][:datatype] == "password" ? "display:none" : "" %>
                <%  str_pwd = session[:field_data][:datatype] == "password" ? "" : "display:none" %>
                <%= text_field_tag("#{prefix}field_default_value",
                                      session[:field_data][:default_value],
                                      :style             => str_txt,
                                      "data-miq_observe" => {:interval => '.5',
                                                             :url      => url}.to_json)
                %>
                <%= password_field_tag("#{prefix}field_password_value",
                                       session[:field_data][:data_value],
                                       :style             => str_pwd,
                                       "data-miq_observe" => {:interval => '.5',
                                                              :url      => url}.to_json)
                %>
              </td>
              <td>
                <%= select_tag("#{prefix}field_datatype",
                               options_for_select(@edit[:new][:available_datatypes],
                               session[:field_data][:datatype]),
                               "data-miq_observe" => {:url => url}.to_json)
                %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
<% end %>
